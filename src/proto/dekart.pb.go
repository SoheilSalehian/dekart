// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.14.0
// source: proto/dekart.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetEnvResponse_Variable_Type int32

const (
	GetEnvResponse_Variable_TYPE_UNSPECIFIED           GetEnvResponse_Variable_Type = 0
	GetEnvResponse_Variable_TYPE_MAPBOX_TOKEN          GetEnvResponse_Variable_Type = 1
	GetEnvResponse_Variable_TYPE_UX_DATA_DOCUMENTATION GetEnvResponse_Variable_Type = 2
	GetEnvResponse_Variable_TYPE_UX_HOMEPAGE           GetEnvResponse_Variable_Type = 3
	GetEnvResponse_Variable_TYPE_ALLOW_FILE_UPLOAD     GetEnvResponse_Variable_Type = 4
	GetEnvResponse_Variable_TYPE_DATASOURCE            GetEnvResponse_Variable_Type = 5
	GetEnvResponse_Variable_TYPE_STORAGE               GetEnvResponse_Variable_Type = 6
	GetEnvResponse_Variable_TYPE_REQUIRE_AMAZON_OIDC   GetEnvResponse_Variable_Type = 7
	GetEnvResponse_Variable_TYPE_REQUIRE_IAP           GetEnvResponse_Variable_Type = 8
	GetEnvResponse_Variable_TYPE_DISABLE_USAGE_STATS   GetEnvResponse_Variable_Type = 9
	GetEnvResponse_Variable_TYPE_REQUIRE_GOOGLE_OAUTH  GetEnvResponse_Variable_Type = 10
	GetEnvResponse_Variable_TYPE_BIGQUERY_PROJECT_ID   GetEnvResponse_Variable_Type = 11
	GetEnvResponse_Variable_TYPE_CLOUD_STORAGE_BUCKET  GetEnvResponse_Variable_Type = 12
)

// Enum value maps for GetEnvResponse_Variable_Type.
var (
	GetEnvResponse_Variable_Type_name = map[int32]string{
		0:  "TYPE_UNSPECIFIED",
		1:  "TYPE_MAPBOX_TOKEN",
		2:  "TYPE_UX_DATA_DOCUMENTATION",
		3:  "TYPE_UX_HOMEPAGE",
		4:  "TYPE_ALLOW_FILE_UPLOAD",
		5:  "TYPE_DATASOURCE",
		6:  "TYPE_STORAGE",
		7:  "TYPE_REQUIRE_AMAZON_OIDC",
		8:  "TYPE_REQUIRE_IAP",
		9:  "TYPE_DISABLE_USAGE_STATS",
		10: "TYPE_REQUIRE_GOOGLE_OAUTH",
		11: "TYPE_BIGQUERY_PROJECT_ID",
		12: "TYPE_CLOUD_STORAGE_BUCKET",
	}
	GetEnvResponse_Variable_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED":           0,
		"TYPE_MAPBOX_TOKEN":          1,
		"TYPE_UX_DATA_DOCUMENTATION": 2,
		"TYPE_UX_HOMEPAGE":           3,
		"TYPE_ALLOW_FILE_UPLOAD":     4,
		"TYPE_DATASOURCE":            5,
		"TYPE_STORAGE":               6,
		"TYPE_REQUIRE_AMAZON_OIDC":   7,
		"TYPE_REQUIRE_IAP":           8,
		"TYPE_DISABLE_USAGE_STATS":   9,
		"TYPE_REQUIRE_GOOGLE_OAUTH":  10,
		"TYPE_BIGQUERY_PROJECT_ID":   11,
		"TYPE_CLOUD_STORAGE_BUCKET":  12,
	}
)

func (x GetEnvResponse_Variable_Type) Enum() *GetEnvResponse_Variable_Type {
	p := new(GetEnvResponse_Variable_Type)
	*p = x
	return p
}

func (x GetEnvResponse_Variable_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetEnvResponse_Variable_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_dekart_proto_enumTypes[0].Descriptor()
}

func (GetEnvResponse_Variable_Type) Type() protoreflect.EnumType {
	return &file_proto_dekart_proto_enumTypes[0]
}

func (x GetEnvResponse_Variable_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetEnvResponse_Variable_Type.Descriptor instead.
func (GetEnvResponse_Variable_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{21, 0, 0}
}

type AuthState_Action int32

const (
	AuthState_ACTION_UNSPECIFIED   AuthState_Action = 0
	AuthState_ACTION_REQUEST_CODE  AuthState_Action = 1
	AuthState_ACTION_REQUEST_TOKEN AuthState_Action = 2
)

// Enum value maps for AuthState_Action.
var (
	AuthState_Action_name = map[int32]string{
		0: "ACTION_UNSPECIFIED",
		1: "ACTION_REQUEST_CODE",
		2: "ACTION_REQUEST_TOKEN",
	}
	AuthState_Action_value = map[string]int32{
		"ACTION_UNSPECIFIED":   0,
		"ACTION_REQUEST_CODE":  1,
		"ACTION_REQUEST_TOKEN": 2,
	}
)

func (x AuthState_Action) Enum() *AuthState_Action {
	p := new(AuthState_Action)
	*p = x
	return p
}

func (x AuthState_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthState_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_dekart_proto_enumTypes[1].Descriptor()
}

func (AuthState_Action) Type() protoreflect.EnumType {
	return &file_proto_dekart_proto_enumTypes[1]
}

func (x AuthState_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthState_Action.Descriptor instead.
func (AuthState_Action) EnumDescriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{23, 0}
}

type Query_JobStatus int32

const (
	Query_JOB_STATUS_UNSPECIFIED     Query_JobStatus = 0
	Query_JOB_STATUS_PENDING         Query_JobStatus = 1
	Query_JOB_STATUS_RUNNING         Query_JobStatus = 2
	Query_JOB_STATUS_DONE_LEGACY     Query_JobStatus = 3 // legacy for backwards compatibility
	Query_JOB_STATUS_READING_RESULTS Query_JobStatus = 4 // job is done proccessing results
	Query_JOB_STATUS_DONE            Query_JobStatus = 5
)

// Enum value maps for Query_JobStatus.
var (
	Query_JobStatus_name = map[int32]string{
		0: "JOB_STATUS_UNSPECIFIED",
		1: "JOB_STATUS_PENDING",
		2: "JOB_STATUS_RUNNING",
		3: "JOB_STATUS_DONE_LEGACY",
		4: "JOB_STATUS_READING_RESULTS",
		5: "JOB_STATUS_DONE",
	}
	Query_JobStatus_value = map[string]int32{
		"JOB_STATUS_UNSPECIFIED":     0,
		"JOB_STATUS_PENDING":         1,
		"JOB_STATUS_RUNNING":         2,
		"JOB_STATUS_DONE_LEGACY":     3,
		"JOB_STATUS_READING_RESULTS": 4,
		"JOB_STATUS_DONE":            5,
	}
)

func (x Query_JobStatus) Enum() *Query_JobStatus {
	p := new(Query_JobStatus)
	*p = x
	return p
}

func (x Query_JobStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Query_JobStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_dekart_proto_enumTypes[2].Descriptor()
}

func (Query_JobStatus) Type() protoreflect.EnumType {
	return &file_proto_dekart_proto_enumTypes[2]
}

func (x Query_JobStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Query_JobStatus.Descriptor instead.
func (Query_JobStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{30, 0}
}

type Query_QuerySource int32

const (
	Query_QUERY_SOURCE_UNSPECIFIED Query_QuerySource = 0
	Query_QUERY_SOURCE_INLINE      Query_QuerySource = 1
	Query_QUERY_SOURCE_STORAGE     Query_QuerySource = 2
)

// Enum value maps for Query_QuerySource.
var (
	Query_QuerySource_name = map[int32]string{
		0: "QUERY_SOURCE_UNSPECIFIED",
		1: "QUERY_SOURCE_INLINE",
		2: "QUERY_SOURCE_STORAGE",
	}
	Query_QuerySource_value = map[string]int32{
		"QUERY_SOURCE_UNSPECIFIED": 0,
		"QUERY_SOURCE_INLINE":      1,
		"QUERY_SOURCE_STORAGE":     2,
	}
)

func (x Query_QuerySource) Enum() *Query_QuerySource {
	p := new(Query_QuerySource)
	*p = x
	return p
}

func (x Query_QuerySource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Query_QuerySource) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_dekart_proto_enumTypes[3].Descriptor()
}

func (Query_QuerySource) Type() protoreflect.EnumType {
	return &file_proto_dekart_proto_enumTypes[3]
}

func (x Query_QuerySource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Query_QuerySource.Descriptor instead.
func (Query_QuerySource) EnumDescriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{30, 1}
}

type File_Status int32

const (
	File_STATUS_UNSPECIFIED File_Status = 0
	File_STATUS_NEW         File_Status = 1 // default initial state
	File_STATUS_RECEIVED    File_Status = 2 // file uploaded by user to temp storage
	File_STATUS_STORED      File_Status = 3 // file stored in permanent storage
)

// Enum value maps for File_Status.
var (
	File_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_NEW",
		2: "STATUS_RECEIVED",
		3: "STATUS_STORED",
	}
	File_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_NEW":         1,
		"STATUS_RECEIVED":    2,
		"STATUS_STORED":      3,
	}
)

func (x File_Status) Enum() *File_Status {
	p := new(File_Status)
	*p = x
	return p
}

func (x File_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (File_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_dekart_proto_enumTypes[4].Descriptor()
}

func (File_Status) Type() protoreflect.EnumType {
	return &file_proto_dekart_proto_enumTypes[4]
}

func (x File_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use File_Status.Descriptor instead.
func (File_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{31, 0}
}

type GetSourceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSourceListRequest) Reset() {
	*x = GetSourceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSourceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSourceListRequest) ProtoMessage() {}

func (x *GetSourceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSourceListRequest.ProtoReflect.Descriptor instead.
func (*GetSourceListRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{0}
}

type GetSourceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sources []*Source `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
}

func (x *GetSourceListResponse) Reset() {
	*x = GetSourceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSourceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSourceListResponse) ProtoMessage() {}

func (x *GetSourceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSourceListResponse.ProtoReflect.Descriptor instead.
func (*GetSourceListResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{1}
}

func (x *GetSourceListResponse) GetSources() []*Source {
	if x != nil {
		return x.Sources
	}
	return nil
}

type GetUserStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamOptions *StreamOptions `protobuf:"bytes,1,opt,name=stream_options,json=streamOptions,proto3" json:"stream_options,omitempty"`
}

func (x *GetUserStreamRequest) Reset() {
	*x = GetUserStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserStreamRequest) ProtoMessage() {}

func (x *GetUserStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserStreamRequest.ProtoReflect.Descriptor instead.
func (*GetUserStreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserStreamRequest) GetStreamOptions() *StreamOptions {
	if x != nil {
		return x.StreamOptions
	}
	return nil
}

type GetUserStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamOptions *StreamOptions `protobuf:"bytes,1,opt,name=stream_options,json=streamOptions,proto3" json:"stream_options,omitempty"`
	SourceUpdate  int64          `protobuf:"varint,2,opt,name=source_update,json=sourceUpdate,proto3" json:"source_update,omitempty"`
}

func (x *GetUserStreamResponse) Reset() {
	*x = GetUserStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserStreamResponse) ProtoMessage() {}

func (x *GetUserStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserStreamResponse.ProtoReflect.Descriptor instead.
func (*GetUserStreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserStreamResponse) GetStreamOptions() *StreamOptions {
	if x != nil {
		return x.StreamOptions
	}
	return nil
}

func (x *GetUserStreamResponse) GetSourceUpdate() int64 {
	if x != nil {
		return x.SourceUpdate
	}
	return 0
}

type TestConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source *Source `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *TestConnectionRequest) Reset() {
	*x = TestConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestConnectionRequest) ProtoMessage() {}

func (x *TestConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestConnectionRequest.ProtoReflect.Descriptor instead.
func (*TestConnectionRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{4}
}

func (x *TestConnectionRequest) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

type TestConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *TestConnectionResponse) Reset() {
	*x = TestConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestConnectionResponse) ProtoMessage() {}

func (x *TestConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestConnectionResponse.ProtoReflect.Descriptor instead.
func (*TestConnectionResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{5}
}

func (x *TestConnectionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TestConnectionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ArchiveSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId string `protobuf:"bytes,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
}

func (x *ArchiveSourceRequest) Reset() {
	*x = ArchiveSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveSourceRequest) ProtoMessage() {}

func (x *ArchiveSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveSourceRequest.ProtoReflect.Descriptor instead.
func (*ArchiveSourceRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{6}
}

func (x *ArchiveSourceRequest) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

type ArchiveSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ArchiveSourceResponse) Reset() {
	*x = ArchiveSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveSourceResponse) ProtoMessage() {}

func (x *ArchiveSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveSourceResponse.ProtoReflect.Descriptor instead.
func (*ArchiveSourceResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{7}
}

type UpdateSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source *Source `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *UpdateSourceRequest) Reset() {
	*x = UpdateSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSourceRequest) ProtoMessage() {}

func (x *UpdateSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSourceRequest.ProtoReflect.Descriptor instead.
func (*UpdateSourceRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateSourceRequest) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

type UpdateSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source *Source `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *UpdateSourceResponse) Reset() {
	*x = UpdateSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSourceResponse) ProtoMessage() {}

func (x *UpdateSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSourceResponse.ProtoReflect.Descriptor instead.
func (*UpdateSourceResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateSourceResponse) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

type CreateSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceName string `protobuf:"bytes,1,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
}

func (x *CreateSourceRequest) Reset() {
	*x = CreateSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSourceRequest) ProtoMessage() {}

func (x *CreateSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSourceRequest.ProtoReflect.Descriptor instead.
func (*CreateSourceRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{10}
}

func (x *CreateSourceRequest) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

type CreateSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source *Source `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *CreateSourceResponse) Reset() {
	*x = CreateSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSourceResponse) ProtoMessage() {}

func (x *CreateSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSourceResponse.ProtoReflect.Descriptor instead.
func (*CreateSourceResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{11}
}

func (x *CreateSourceResponse) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

type Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SourceName         string `protobuf:"bytes,2,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
	BigqueryProjectId  string `protobuf:"bytes,3,opt,name=bigquery_project_id,json=bigqueryProjectId,proto3" json:"bigquery_project_id,omitempty"`
	CloudStorageBucket string `protobuf:"bytes,4,opt,name=cloud_storage_bucket,json=cloudStorageBucket,proto3" json:"cloud_storage_bucket,omitempty"`
}

func (x *Source) Reset() {
	*x = Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{12}
}

func (x *Source) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Source) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

func (x *Source) GetBigqueryProjectId() string {
	if x != nil {
		return x.BigqueryProjectId
	}
	return ""
}

func (x *Source) GetCloudStorageBucket() string {
	if x != nil {
		return x.CloudStorageBucket
	}
	return ""
}

type GetUsageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUsageRequest) Reset() {
	*x = GetUsageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsageRequest) ProtoMessage() {}

func (x *GetUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsageRequest.ProtoReflect.Descriptor instead.
func (*GetUsageRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{13}
}

type GetUsageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalReports int64 `protobuf:"varint,1,opt,name=total_reports,json=totalReports,proto3" json:"total_reports,omitempty"`
	TotalQueries int64 `protobuf:"varint,2,opt,name=total_queries,json=totalQueries,proto3" json:"total_queries,omitempty"`
	TotalFiles   int64 `protobuf:"varint,3,opt,name=total_files,json=totalFiles,proto3" json:"total_files,omitempty"`
	TotalAuthors int64 `protobuf:"varint,4,opt,name=total_authors,json=totalAuthors,proto3" json:"total_authors,omitempty"`
}

func (x *GetUsageResponse) Reset() {
	*x = GetUsageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsageResponse) ProtoMessage() {}

func (x *GetUsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsageResponse.ProtoReflect.Descriptor instead.
func (*GetUsageResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{14}
}

func (x *GetUsageResponse) GetTotalReports() int64 {
	if x != nil {
		return x.TotalReports
	}
	return 0
}

func (x *GetUsageResponse) GetTotalQueries() int64 {
	if x != nil {
		return x.TotalQueries
	}
	return 0
}

func (x *GetUsageResponse) GetTotalFiles() int64 {
	if x != nil {
		return x.TotalFiles
	}
	return 0
}

func (x *GetUsageResponse) GetTotalAuthors() int64 {
	if x != nil {
		return x.TotalAuthors
	}
	return 0
}

type SetDiscoverableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportId     string `protobuf:"bytes,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	Discoverable bool   `protobuf:"varint,2,opt,name=discoverable,proto3" json:"discoverable,omitempty"`
}

func (x *SetDiscoverableRequest) Reset() {
	*x = SetDiscoverableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDiscoverableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDiscoverableRequest) ProtoMessage() {}

func (x *SetDiscoverableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDiscoverableRequest.ProtoReflect.Descriptor instead.
func (*SetDiscoverableRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{15}
}

func (x *SetDiscoverableRequest) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

func (x *SetDiscoverableRequest) GetDiscoverable() bool {
	if x != nil {
		return x.Discoverable
	}
	return false
}

type SetDiscoverableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetDiscoverableResponse) Reset() {
	*x = SetDiscoverableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDiscoverableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDiscoverableResponse) ProtoMessage() {}

func (x *SetDiscoverableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDiscoverableResponse.ProtoReflect.Descriptor instead.
func (*SetDiscoverableResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{16}
}

type RemoveDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
}

func (x *RemoveDatasetRequest) Reset() {
	*x = RemoveDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDatasetRequest) ProtoMessage() {}

func (x *RemoveDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDatasetRequest.ProtoReflect.Descriptor instead.
func (*RemoveDatasetRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{17}
}

func (x *RemoveDatasetRequest) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

type RemoveDatasetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
}

func (x *RemoveDatasetResponse) Reset() {
	*x = RemoveDatasetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDatasetResponse) ProtoMessage() {}

func (x *RemoveDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDatasetResponse.ProtoReflect.Descriptor instead.
func (*RemoveDatasetResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{18}
}

func (x *RemoveDatasetResponse) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

type StreamOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence int64 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *StreamOptions) Reset() {
	*x = StreamOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamOptions) ProtoMessage() {}

func (x *StreamOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamOptions.ProtoReflect.Descriptor instead.
func (*StreamOptions) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{19}
}

func (x *StreamOptions) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type GetEnvRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetEnvRequest) Reset() {
	*x = GetEnvRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnvRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvRequest) ProtoMessage() {}

func (x *GetEnvRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvRequest.ProtoReflect.Descriptor instead.
func (*GetEnvRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{20}
}

type GetEnvResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Variables []*GetEnvResponse_Variable `protobuf:"bytes,1,rep,name=variables,proto3" json:"variables,omitempty"`
}

func (x *GetEnvResponse) Reset() {
	*x = GetEnvResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnvResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvResponse) ProtoMessage() {}

func (x *GetEnvResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvResponse.ProtoReflect.Descriptor instead.
func (*GetEnvResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{21}
}

func (x *GetEnvResponse) GetVariables() []*GetEnvResponse_Variable {
	if x != nil {
		return x.Variables
	}
	return nil
}

// RedirectState is used to pass state between the server and the UI via redirect
type RedirectState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenJson string `protobuf:"bytes,1,opt,name=token_json,json=tokenJson,proto3" json:"token_json,omitempty"`
	Error     string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RedirectState) Reset() {
	*x = RedirectState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedirectState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedirectState) ProtoMessage() {}

func (x *RedirectState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedirectState.ProtoReflect.Descriptor instead.
func (*RedirectState) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{22}
}

func (x *RedirectState) GetTokenJson() string {
	if x != nil {
		return x.TokenJson
	}
	return ""
}

func (x *RedirectState) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type AuthState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action  AuthState_Action `protobuf:"varint,1,opt,name=action,proto3,enum=AuthState_Action" json:"action,omitempty"`
	AuthUrl string           `protobuf:"bytes,2,opt,name=auth_url,json=authUrl,proto3" json:"auth_url,omitempty"`
	UiUrl   string           `protobuf:"bytes,3,opt,name=ui_url,json=uiUrl,proto3" json:"ui_url,omitempty"`
	Secret  string           `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *AuthState) Reset() {
	*x = AuthState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthState) ProtoMessage() {}

func (x *AuthState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthState.ProtoReflect.Descriptor instead.
func (*AuthState) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{23}
}

func (x *AuthState) GetAction() AuthState_Action {
	if x != nil {
		return x.Action
	}
	return AuthState_ACTION_UNSPECIFIED
}

func (x *AuthState) GetAuthUrl() string {
	if x != nil {
		return x.AuthUrl
	}
	return ""
}

func (x *AuthState) GetUiUrl() string {
	if x != nil {
		return x.UiUrl
	}
	return ""
}

func (x *AuthState) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type ArchiveReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportId string `protobuf:"bytes,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	Archive  bool   `protobuf:"varint,2,opt,name=archive,proto3" json:"archive,omitempty"`
}

func (x *ArchiveReportRequest) Reset() {
	*x = ArchiveReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveReportRequest) ProtoMessage() {}

func (x *ArchiveReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveReportRequest.ProtoReflect.Descriptor instead.
func (*ArchiveReportRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{24}
}

func (x *ArchiveReportRequest) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

func (x *ArchiveReportRequest) GetArchive() bool {
	if x != nil {
		return x.Archive
	}
	return false
}

type ArchiveReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ArchiveReportResponse) Reset() {
	*x = ArchiveReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveReportResponse) ProtoMessage() {}

func (x *ArchiveReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveReportResponse.ProtoReflect.Descriptor instead.
func (*ArchiveReportResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{25}
}

type ReportListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamOptions *StreamOptions `protobuf:"bytes,1,opt,name=stream_options,json=streamOptions,proto3" json:"stream_options,omitempty"`
}

func (x *ReportListRequest) Reset() {
	*x = ReportListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportListRequest) ProtoMessage() {}

func (x *ReportListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportListRequest.ProtoReflect.Descriptor instead.
func (*ReportListRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{26}
}

func (x *ReportListRequest) GetStreamOptions() *StreamOptions {
	if x != nil {
		return x.StreamOptions
	}
	return nil
}

type ReportListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reports       []*Report      `protobuf:"bytes,1,rep,name=reports,proto3" json:"reports,omitempty"`
	StreamOptions *StreamOptions `protobuf:"bytes,2,opt,name=stream_options,json=streamOptions,proto3" json:"stream_options,omitempty"`
}

func (x *ReportListResponse) Reset() {
	*x = ReportListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportListResponse) ProtoMessage() {}

func (x *ReportListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportListResponse.ProtoReflect.Descriptor instead.
func (*ReportListResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{27}
}

func (x *ReportListResponse) GetReports() []*Report {
	if x != nil {
		return x.Reports
	}
	return nil
}

func (x *ReportListResponse) GetStreamOptions() *StreamOptions {
	if x != nil {
		return x.StreamOptions
	}
	return nil
}

type Report struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MapConfig    string `protobuf:"bytes,2,opt,name=map_config,json=mapConfig,proto3" json:"map_config,omitempty"`
	Title        string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Archived     bool   `protobuf:"varint,4,opt,name=archived,proto3" json:"archived,omitempty"`
	CanWrite     bool   `protobuf:"varint,5,opt,name=can_write,json=canWrite,proto3" json:"can_write,omitempty"`
	AuthorEmail  string `protobuf:"bytes,6,opt,name=author_email,json=authorEmail,proto3" json:"author_email,omitempty"`
	Discoverable bool   `protobuf:"varint,7,opt,name=discoverable,proto3" json:"discoverable,omitempty"` // report is discoverable by other users of the same instance
}

func (x *Report) Reset() {
	*x = Report{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Report) ProtoMessage() {}

func (x *Report) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Report.ProtoReflect.Descriptor instead.
func (*Report) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{28}
}

func (x *Report) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Report) GetMapConfig() string {
	if x != nil {
		return x.MapConfig
	}
	return ""
}

func (x *Report) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Report) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

func (x *Report) GetCanWrite() bool {
	if x != nil {
		return x.CanWrite
	}
	return false
}

func (x *Report) GetAuthorEmail() string {
	if x != nil {
		return x.AuthorEmail
	}
	return ""
}

func (x *Report) GetDiscoverable() bool {
	if x != nil {
		return x.Discoverable
	}
	return false
}

type Dataset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ReportId  string `protobuf:"bytes,2,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	QueryId   string `protobuf:"bytes,3,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	CreatedAt int64  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	FileId    string `protobuf:"bytes,6,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Name      string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Dataset) Reset() {
	*x = Dataset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dataset) ProtoMessage() {}

func (x *Dataset) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dataset.ProtoReflect.Descriptor instead.
func (*Dataset) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{29}
}

func (x *Dataset) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Dataset) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

func (x *Dataset) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *Dataset) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Dataset) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Dataset) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *Dataset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// string report_id = 2;
	QueryText      string            `protobuf:"bytes,3,opt,name=query_text,json=queryText,proto3" json:"query_text,omitempty"`
	JobStatus      Query_JobStatus   `protobuf:"varint,4,opt,name=job_status,json=jobStatus,proto3,enum=Query_JobStatus" json:"job_status,omitempty"`
	JobResultId    string            `protobuf:"bytes,5,opt,name=job_result_id,json=jobResultId,proto3" json:"job_result_id,omitempty"`
	JobError       string            `protobuf:"bytes,6,opt,name=job_error,json=jobError,proto3" json:"job_error,omitempty"`
	JobDuration    int64             `protobuf:"varint,7,opt,name=job_duration,json=jobDuration,proto3" json:"job_duration,omitempty"`
	TotalRows      int32             `protobuf:"varint,8,opt,name=total_rows,json=totalRows,proto3" json:"total_rows,omitempty"`
	BytesProcessed int64             `protobuf:"varint,9,opt,name=bytes_processed,json=bytesProcessed,proto3" json:"bytes_processed,omitempty"`
	ResultSize     int64             `protobuf:"varint,10,opt,name=result_size,json=resultSize,proto3" json:"result_size,omitempty"`
	CreatedAt      int64             `protobuf:"varint,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      int64             `protobuf:"varint,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	QuerySource    Query_QuerySource `protobuf:"varint,13,opt,name=query_source,json=querySource,proto3,enum=Query_QuerySource" json:"query_source,omitempty"`
	QuerySourceId  string            `protobuf:"bytes,14,opt,name=query_source_id,json=querySourceId,proto3" json:"query_source_id,omitempty"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{30}
}

func (x *Query) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Query) GetQueryText() string {
	if x != nil {
		return x.QueryText
	}
	return ""
}

func (x *Query) GetJobStatus() Query_JobStatus {
	if x != nil {
		return x.JobStatus
	}
	return Query_JOB_STATUS_UNSPECIFIED
}

func (x *Query) GetJobResultId() string {
	if x != nil {
		return x.JobResultId
	}
	return ""
}

func (x *Query) GetJobError() string {
	if x != nil {
		return x.JobError
	}
	return ""
}

func (x *Query) GetJobDuration() int64 {
	if x != nil {
		return x.JobDuration
	}
	return 0
}

func (x *Query) GetTotalRows() int32 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

func (x *Query) GetBytesProcessed() int64 {
	if x != nil {
		return x.BytesProcessed
	}
	return 0
}

func (x *Query) GetResultSize() int64 {
	if x != nil {
		return x.ResultSize
	}
	return 0
}

func (x *Query) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Query) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Query) GetQuerySource() Query_QuerySource {
	if x != nil {
		return x.QuerySource
	}
	return Query_QUERY_SOURCE_UNSPECIFIED
}

func (x *Query) GetQuerySourceId() string {
	if x != nil {
		return x.QuerySourceId
	}
	return ""
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MimeType    string      `protobuf:"bytes,3,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Size        int64       `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	SourceId    string      `protobuf:"bytes,5,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	CreatedAt   int64       `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   int64       `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	FileStatus  File_Status `protobuf:"varint,8,opt,name=file_status,json=fileStatus,proto3,enum=File_Status" json:"file_status,omitempty"`
	UploadError string      `protobuf:"bytes,9,opt,name=upload_error,json=uploadError,proto3" json:"upload_error,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{31}
}

func (x *File) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *File) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *File) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *File) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *File) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *File) GetFileStatus() File_Status {
	if x != nil {
		return x.FileStatus
	}
	return File_STATUS_UNSPECIFIED
}

func (x *File) GetUploadError() string {
	if x != nil {
		return x.UploadError
	}
	return ""
}

type UpdateReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Report *Report  `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
	Query  []*Query `protobuf:"bytes,2,rep,name=query,proto3" json:"query,omitempty"`
}

func (x *UpdateReportRequest) Reset() {
	*x = UpdateReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReportRequest) ProtoMessage() {}

func (x *UpdateReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReportRequest.ProtoReflect.Descriptor instead.
func (*UpdateReportRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateReportRequest) GetReport() *Report {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *UpdateReportRequest) GetQuery() []*Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type UpdateReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateReportResponse) Reset() {
	*x = UpdateReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReportResponse) ProtoMessage() {}

func (x *UpdateReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReportResponse.ProtoReflect.Descriptor instead.
func (*UpdateReportResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{33}
}

type RunQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId   string `protobuf:"bytes,1,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	QueryText string `protobuf:"bytes,2,opt,name=query_text,json=queryText,proto3" json:"query_text,omitempty"`
}

func (x *RunQueryRequest) Reset() {
	*x = RunQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunQueryRequest) ProtoMessage() {}

func (x *RunQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunQueryRequest.ProtoReflect.Descriptor instead.
func (*RunQueryRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{34}
}

func (x *RunQueryRequest) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *RunQueryRequest) GetQueryText() string {
	if x != nil {
		return x.QueryText
	}
	return ""
}

type RunQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunQueryResponse) Reset() {
	*x = RunQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunQueryResponse) ProtoMessage() {}

func (x *RunQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunQueryResponse.ProtoReflect.Descriptor instead.
func (*RunQueryResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{35}
}

type CancelQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId string `protobuf:"bytes,1,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
}

func (x *CancelQueryRequest) Reset() {
	*x = CancelQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelQueryRequest) ProtoMessage() {}

func (x *CancelQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelQueryRequest.ProtoReflect.Descriptor instead.
func (*CancelQueryRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{36}
}

func (x *CancelQueryRequest) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

type CancelQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelQueryResponse) Reset() {
	*x = CancelQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelQueryResponse) ProtoMessage() {}

func (x *CancelQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelQueryResponse.ProtoReflect.Descriptor instead.
func (*CancelQueryResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{37}
}

type UpdateDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateDatasetRequest) Reset() {
	*x = UpdateDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDatasetRequest) ProtoMessage() {}

func (x *UpdateDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDatasetRequest.ProtoReflect.Descriptor instead.
func (*UpdateDatasetRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateDatasetRequest) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *UpdateDatasetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateDatasetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateDatasetResponse) Reset() {
	*x = UpdateDatasetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDatasetResponse) ProtoMessage() {}

func (x *UpdateDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDatasetResponse.ProtoReflect.Descriptor instead.
func (*UpdateDatasetResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{39}
}

type CreateDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportId string `protobuf:"bytes,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
}

func (x *CreateDatasetRequest) Reset() {
	*x = CreateDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatasetRequest) ProtoMessage() {}

func (x *CreateDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatasetRequest.ProtoReflect.Descriptor instead.
func (*CreateDatasetRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{40}
}

func (x *CreateDatasetRequest) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

type CreateDatasetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateDatasetResponse) Reset() {
	*x = CreateDatasetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatasetResponse) ProtoMessage() {}

func (x *CreateDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatasetResponse.ProtoReflect.Descriptor instead.
func (*CreateDatasetResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{41}
}

type CreateFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
}

func (x *CreateFileRequest) Reset() {
	*x = CreateFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileRequest) ProtoMessage() {}

func (x *CreateFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileRequest.ProtoReflect.Descriptor instead.
func (*CreateFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{42}
}

func (x *CreateFileRequest) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

type CreateFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId string `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
}

func (x *CreateFileResponse) Reset() {
	*x = CreateFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileResponse) ProtoMessage() {}

func (x *CreateFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileResponse.ProtoReflect.Descriptor instead.
func (*CreateFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{43}
}

func (x *CreateFileResponse) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type CreateQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
}

func (x *CreateQueryRequest) Reset() {
	*x = CreateQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueryRequest) ProtoMessage() {}

func (x *CreateQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueryRequest.ProtoReflect.Descriptor instead.
func (*CreateQueryRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{44}
}

func (x *CreateQueryRequest) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

type CreateQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *CreateQueryResponse) Reset() {
	*x = CreateQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueryResponse) ProtoMessage() {}

func (x *CreateQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueryResponse.ProtoReflect.Descriptor instead.
func (*CreateQueryResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{45}
}

func (x *CreateQueryResponse) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type ReportStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Report        *Report        `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
	StreamOptions *StreamOptions `protobuf:"bytes,2,opt,name=stream_options,json=streamOptions,proto3" json:"stream_options,omitempty"`
}

func (x *ReportStreamRequest) Reset() {
	*x = ReportStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportStreamRequest) ProtoMessage() {}

func (x *ReportStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportStreamRequest.ProtoReflect.Descriptor instead.
func (*ReportStreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{46}
}

func (x *ReportStreamRequest) GetReport() *Report {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *ReportStreamRequest) GetStreamOptions() *StreamOptions {
	if x != nil {
		return x.StreamOptions
	}
	return nil
}

type ReportStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Report        *Report        `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
	Queries       []*Query       `protobuf:"bytes,2,rep,name=queries,proto3" json:"queries,omitempty"`
	StreamOptions *StreamOptions `protobuf:"bytes,3,opt,name=stream_options,json=streamOptions,proto3" json:"stream_options,omitempty"`
	Datasets      []*Dataset     `protobuf:"bytes,4,rep,name=datasets,proto3" json:"datasets,omitempty"`
	Files         []*File        `protobuf:"bytes,5,rep,name=files,proto3" json:"files,omitempty"`
	Sources       []*Source      `protobuf:"bytes,6,rep,name=sources,proto3" json:"sources,omitempty"`
}

func (x *ReportStreamResponse) Reset() {
	*x = ReportStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportStreamResponse) ProtoMessage() {}

func (x *ReportStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportStreamResponse.ProtoReflect.Descriptor instead.
func (*ReportStreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{47}
}

func (x *ReportStreamResponse) GetReport() *Report {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *ReportStreamResponse) GetQueries() []*Query {
	if x != nil {
		return x.Queries
	}
	return nil
}

func (x *ReportStreamResponse) GetStreamOptions() *StreamOptions {
	if x != nil {
		return x.StreamOptions
	}
	return nil
}

func (x *ReportStreamResponse) GetDatasets() []*Dataset {
	if x != nil {
		return x.Datasets
	}
	return nil
}

func (x *ReportStreamResponse) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ReportStreamResponse) GetSources() []*Source {
	if x != nil {
		return x.Sources
	}
	return nil
}

type ForkReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportId string `protobuf:"bytes,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
}

func (x *ForkReportRequest) Reset() {
	*x = ForkReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForkReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkReportRequest) ProtoMessage() {}

func (x *ForkReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForkReportRequest.ProtoReflect.Descriptor instead.
func (*ForkReportRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{48}
}

func (x *ForkReportRequest) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

type ForkReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportId string `protobuf:"bytes,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
}

func (x *ForkReportResponse) Reset() {
	*x = ForkReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForkReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkReportResponse) ProtoMessage() {}

func (x *ForkReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForkReportResponse.ProtoReflect.Descriptor instead.
func (*ForkReportResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{49}
}

func (x *ForkReportResponse) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

type CreateReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateReportRequest) Reset() {
	*x = CreateReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReportRequest) ProtoMessage() {}

func (x *CreateReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReportRequest.ProtoReflect.Descriptor instead.
func (*CreateReportRequest) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{50}
}

type CreateReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Report *Report `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
}

func (x *CreateReportResponse) Reset() {
	*x = CreateReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReportResponse) ProtoMessage() {}

func (x *CreateReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReportResponse.ProtoReflect.Descriptor instead.
func (*CreateReportResponse) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{51}
}

func (x *CreateReportResponse) GetReport() *Report {
	if x != nil {
		return x.Report
	}
	return nil
}

type GetEnvResponse_Variable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  GetEnvResponse_Variable_Type `protobuf:"varint,1,opt,name=type,proto3,enum=GetEnvResponse_Variable_Type" json:"type,omitempty"`
	Value string                       `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetEnvResponse_Variable) Reset() {
	*x = GetEnvResponse_Variable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dekart_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnvResponse_Variable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvResponse_Variable) ProtoMessage() {}

func (x *GetEnvResponse_Variable) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dekart_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvResponse_Variable.ProtoReflect.Descriptor instead.
func (*GetEnvResponse_Variable) Descriptor() ([]byte, []int) {
	return file_proto_dekart_proto_rawDescGZIP(), []int{21, 0}
}

func (x *GetEnvResponse_Variable) GetType() GetEnvResponse_Variable_Type {
	if x != nil {
		return x.Type
	}
	return GetEnvResponse_Variable_TYPE_UNSPECIFIED
}

func (x *GetEnvResponse_Variable) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_proto_dekart_proto protoreflect.FileDescriptor

var file_proto_dekart_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65, 0x6b, 0x61, 0x72, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3a, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x4d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x35, 0x0a, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x73, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x38, 0x0a, 0x15,
	0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x48, 0x0a, 0x16, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x33, 0x0a, 0x14, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x37, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0x36, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x22, 0x9b, 0x01, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x62, 0x69, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x69, 0x67, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x11,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0xa2, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x22, 0x59, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x0a, 0x14,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x0d, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x45,
	0x6e, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xfb, 0x03, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x45, 0x6e, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x1a, 0xb0, 0x03, 0x0a, 0x08, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xda, 0x02, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4d, 0x41, 0x50, 0x42, 0x4f, 0x58, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x01,
	0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x58, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02,
	0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45,
	0x50, 0x41, 0x47, 0x45, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44,
	0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x10, 0x06, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x5f, 0x41, 0x4d, 0x41, 0x5a, 0x4f, 0x4e,
	0x5f, 0x4f, 0x49, 0x44, 0x43, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x5f, 0x49, 0x41, 0x50, 0x10, 0x08, 0x12, 0x1c, 0x0a,
	0x18, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x55, 0x53,
	0x41, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x10, 0x09, 0x12, 0x1d, 0x0a, 0x19, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x5f, 0x47, 0x4f, 0x4f, 0x47,
	0x4c, 0x45, 0x5f, 0x4f, 0x41, 0x55, 0x54, 0x48, 0x10, 0x0a, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x42, 0x49, 0x47, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x4a,
	0x45, 0x43, 0x54, 0x5f, 0x49, 0x44, 0x10, 0x0b, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x42,
	0x55, 0x43, 0x4b, 0x45, 0x54, 0x10, 0x0c, 0x22, 0x44, 0x0a, 0x0d, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xd5, 0x01,
	0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x55, 0x72,
	0x6c, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x69, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x75, 0x69, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x22, 0x53, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x4f,
	0x4b, 0x45, 0x4e, 0x10, 0x02, 0x22, 0x4d, 0x0a, 0x14, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x0a,
	0x11, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x35, 0x0a, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x6e, 0x0a, 0x12, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x12, 0x35, 0x0a, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xcd, 0x01, 0x0a, 0x06, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x07, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xdc, 0x05, 0x0a, 0x05, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x4a, 0x6f,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6a, 0x6f, 0x62, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6a, 0x6f, 0x62, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6a, 0x6f, 0x62, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x72, 0x6f, 0x77, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x35, 0x0a,
	0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0xa8, 0x01, 0x0a,
	0x09, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x16, 0x4a, 0x4f,
	0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x16,
	0x0a, 0x12, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x55, 0x4e,
	0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x5f, 0x4c, 0x45, 0x47, 0x41, 0x43, 0x59,
	0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x52, 0x45, 0x41, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x53,
	0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x05, 0x22, 0x5e, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x49, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x18, 0x0a,
	0x14, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x53, 0x54,
	0x4f, 0x52, 0x41, 0x47, 0x45, 0x10, 0x02, 0x22, 0xe2, 0x02, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x2d, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x58, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e,
	0x45, 0x57, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52,
	0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x44, 0x10, 0x03, 0x22, 0x54, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x0f, 0x52, 0x75,
	0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x65, 0x78, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x75, 0x6e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x12, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x49, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x17,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x33, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x22, 0x6d, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x35, 0x0a, 0x0e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0xf6, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x71,
	0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x35, 0x0a,
	0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x11, 0x46, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x12,
	0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22,
	0x15, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x32,
	0xe6, 0x0a, 0x0a, 0x06, 0x44, 0x65, 0x6b, 0x61, 0x72, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0a, 0x46, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x2e, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x46, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x14, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x40, 0x0a, 0x0d, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x15, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x17, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x15,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x40, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x12, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x37, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x12, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x13, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x08, 0x52, 0x75, 0x6e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x10, 0x2e, 0x52, 0x75, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x52, 0x75, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x13, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x12,
	0x0e, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0f, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x14, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x42, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x12, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x42, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x15, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x31,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3d, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x14, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3d, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x14, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x40, 0x0a, 0x0d, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x15, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x40, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x15, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_dekart_proto_rawDescOnce sync.Once
	file_proto_dekart_proto_rawDescData = file_proto_dekart_proto_rawDesc
)

func file_proto_dekart_proto_rawDescGZIP() []byte {
	file_proto_dekart_proto_rawDescOnce.Do(func() {
		file_proto_dekart_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_dekart_proto_rawDescData)
	})
	return file_proto_dekart_proto_rawDescData
}

var file_proto_dekart_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_proto_dekart_proto_msgTypes = make([]protoimpl.MessageInfo, 53)
var file_proto_dekart_proto_goTypes = []interface{}{
	(GetEnvResponse_Variable_Type)(0), // 0: GetEnvResponse.Variable.Type
	(AuthState_Action)(0),             // 1: AuthState.Action
	(Query_JobStatus)(0),              // 2: Query.JobStatus
	(Query_QuerySource)(0),            // 3: Query.QuerySource
	(File_Status)(0),                  // 4: File.Status
	(*GetSourceListRequest)(nil),      // 5: GetSourceListRequest
	(*GetSourceListResponse)(nil),     // 6: GetSourceListResponse
	(*GetUserStreamRequest)(nil),      // 7: GetUserStreamRequest
	(*GetUserStreamResponse)(nil),     // 8: GetUserStreamResponse
	(*TestConnectionRequest)(nil),     // 9: TestConnectionRequest
	(*TestConnectionResponse)(nil),    // 10: TestConnectionResponse
	(*ArchiveSourceRequest)(nil),      // 11: ArchiveSourceRequest
	(*ArchiveSourceResponse)(nil),     // 12: ArchiveSourceResponse
	(*UpdateSourceRequest)(nil),       // 13: UpdateSourceRequest
	(*UpdateSourceResponse)(nil),      // 14: UpdateSourceResponse
	(*CreateSourceRequest)(nil),       // 15: CreateSourceRequest
	(*CreateSourceResponse)(nil),      // 16: CreateSourceResponse
	(*Source)(nil),                    // 17: Source
	(*GetUsageRequest)(nil),           // 18: GetUsageRequest
	(*GetUsageResponse)(nil),          // 19: GetUsageResponse
	(*SetDiscoverableRequest)(nil),    // 20: SetDiscoverableRequest
	(*SetDiscoverableResponse)(nil),   // 21: SetDiscoverableResponse
	(*RemoveDatasetRequest)(nil),      // 22: RemoveDatasetRequest
	(*RemoveDatasetResponse)(nil),     // 23: RemoveDatasetResponse
	(*StreamOptions)(nil),             // 24: StreamOptions
	(*GetEnvRequest)(nil),             // 25: GetEnvRequest
	(*GetEnvResponse)(nil),            // 26: GetEnvResponse
	(*RedirectState)(nil),             // 27: RedirectState
	(*AuthState)(nil),                 // 28: AuthState
	(*ArchiveReportRequest)(nil),      // 29: ArchiveReportRequest
	(*ArchiveReportResponse)(nil),     // 30: ArchiveReportResponse
	(*ReportListRequest)(nil),         // 31: ReportListRequest
	(*ReportListResponse)(nil),        // 32: ReportListResponse
	(*Report)(nil),                    // 33: Report
	(*Dataset)(nil),                   // 34: Dataset
	(*Query)(nil),                     // 35: Query
	(*File)(nil),                      // 36: File
	(*UpdateReportRequest)(nil),       // 37: UpdateReportRequest
	(*UpdateReportResponse)(nil),      // 38: UpdateReportResponse
	(*RunQueryRequest)(nil),           // 39: RunQueryRequest
	(*RunQueryResponse)(nil),          // 40: RunQueryResponse
	(*CancelQueryRequest)(nil),        // 41: CancelQueryRequest
	(*CancelQueryResponse)(nil),       // 42: CancelQueryResponse
	(*UpdateDatasetRequest)(nil),      // 43: UpdateDatasetRequest
	(*UpdateDatasetResponse)(nil),     // 44: UpdateDatasetResponse
	(*CreateDatasetRequest)(nil),      // 45: CreateDatasetRequest
	(*CreateDatasetResponse)(nil),     // 46: CreateDatasetResponse
	(*CreateFileRequest)(nil),         // 47: CreateFileRequest
	(*CreateFileResponse)(nil),        // 48: CreateFileResponse
	(*CreateQueryRequest)(nil),        // 49: CreateQueryRequest
	(*CreateQueryResponse)(nil),       // 50: CreateQueryResponse
	(*ReportStreamRequest)(nil),       // 51: ReportStreamRequest
	(*ReportStreamResponse)(nil),      // 52: ReportStreamResponse
	(*ForkReportRequest)(nil),         // 53: ForkReportRequest
	(*ForkReportResponse)(nil),        // 54: ForkReportResponse
	(*CreateReportRequest)(nil),       // 55: CreateReportRequest
	(*CreateReportResponse)(nil),      // 56: CreateReportResponse
	(*GetEnvResponse_Variable)(nil),   // 57: GetEnvResponse.Variable
}
var file_proto_dekart_proto_depIdxs = []int32{
	17, // 0: GetSourceListResponse.sources:type_name -> Source
	24, // 1: GetUserStreamRequest.stream_options:type_name -> StreamOptions
	24, // 2: GetUserStreamResponse.stream_options:type_name -> StreamOptions
	17, // 3: TestConnectionRequest.source:type_name -> Source
	17, // 4: UpdateSourceRequest.source:type_name -> Source
	17, // 5: UpdateSourceResponse.source:type_name -> Source
	17, // 6: CreateSourceResponse.source:type_name -> Source
	57, // 7: GetEnvResponse.variables:type_name -> GetEnvResponse.Variable
	1,  // 8: AuthState.action:type_name -> AuthState.Action
	24, // 9: ReportListRequest.stream_options:type_name -> StreamOptions
	33, // 10: ReportListResponse.reports:type_name -> Report
	24, // 11: ReportListResponse.stream_options:type_name -> StreamOptions
	2,  // 12: Query.job_status:type_name -> Query.JobStatus
	3,  // 13: Query.query_source:type_name -> Query.QuerySource
	4,  // 14: File.file_status:type_name -> File.Status
	33, // 15: UpdateReportRequest.report:type_name -> Report
	35, // 16: UpdateReportRequest.query:type_name -> Query
	35, // 17: CreateQueryResponse.query:type_name -> Query
	33, // 18: ReportStreamRequest.report:type_name -> Report
	24, // 19: ReportStreamRequest.stream_options:type_name -> StreamOptions
	33, // 20: ReportStreamResponse.report:type_name -> Report
	35, // 21: ReportStreamResponse.queries:type_name -> Query
	24, // 22: ReportStreamResponse.stream_options:type_name -> StreamOptions
	34, // 23: ReportStreamResponse.datasets:type_name -> Dataset
	36, // 24: ReportStreamResponse.files:type_name -> File
	17, // 25: ReportStreamResponse.sources:type_name -> Source
	33, // 26: CreateReportResponse.report:type_name -> Report
	0,  // 27: GetEnvResponse.Variable.type:type_name -> GetEnvResponse.Variable.Type
	55, // 28: Dekart.CreateReport:input_type -> CreateReportRequest
	53, // 29: Dekart.ForkReport:input_type -> ForkReportRequest
	37, // 30: Dekart.UpdateReport:input_type -> UpdateReportRequest
	29, // 31: Dekart.ArchiveReport:input_type -> ArchiveReportRequest
	20, // 32: Dekart.SetDiscoverable:input_type -> SetDiscoverableRequest
	45, // 33: Dekart.CreateDataset:input_type -> CreateDatasetRequest
	22, // 34: Dekart.RemoveDataset:input_type -> RemoveDatasetRequest
	43, // 35: Dekart.UpdateDataset:input_type -> UpdateDatasetRequest
	47, // 36: Dekart.CreateFile:input_type -> CreateFileRequest
	49, // 37: Dekart.CreateQuery:input_type -> CreateQueryRequest
	39, // 38: Dekart.RunQuery:input_type -> RunQueryRequest
	41, // 39: Dekart.CancelQuery:input_type -> CancelQueryRequest
	25, // 40: Dekart.GetEnv:input_type -> GetEnvRequest
	51, // 41: Dekart.GetReportStream:input_type -> ReportStreamRequest
	31, // 42: Dekart.GetReportListStream:input_type -> ReportListRequest
	7,  // 43: Dekart.GetUserStream:input_type -> GetUserStreamRequest
	18, // 44: Dekart.GetUsage:input_type -> GetUsageRequest
	15, // 45: Dekart.CreateSource:input_type -> CreateSourceRequest
	13, // 46: Dekart.UpdateSource:input_type -> UpdateSourceRequest
	11, // 47: Dekart.ArchiveSource:input_type -> ArchiveSourceRequest
	5,  // 48: Dekart.GetSourceList:input_type -> GetSourceListRequest
	9,  // 49: Dekart.TestConnection:input_type -> TestConnectionRequest
	56, // 50: Dekart.CreateReport:output_type -> CreateReportResponse
	54, // 51: Dekart.ForkReport:output_type -> ForkReportResponse
	38, // 52: Dekart.UpdateReport:output_type -> UpdateReportResponse
	30, // 53: Dekart.ArchiveReport:output_type -> ArchiveReportResponse
	21, // 54: Dekart.SetDiscoverable:output_type -> SetDiscoverableResponse
	46, // 55: Dekart.CreateDataset:output_type -> CreateDatasetResponse
	23, // 56: Dekart.RemoveDataset:output_type -> RemoveDatasetResponse
	44, // 57: Dekart.UpdateDataset:output_type -> UpdateDatasetResponse
	48, // 58: Dekart.CreateFile:output_type -> CreateFileResponse
	50, // 59: Dekart.CreateQuery:output_type -> CreateQueryResponse
	40, // 60: Dekart.RunQuery:output_type -> RunQueryResponse
	42, // 61: Dekart.CancelQuery:output_type -> CancelQueryResponse
	26, // 62: Dekart.GetEnv:output_type -> GetEnvResponse
	52, // 63: Dekart.GetReportStream:output_type -> ReportStreamResponse
	32, // 64: Dekart.GetReportListStream:output_type -> ReportListResponse
	8,  // 65: Dekart.GetUserStream:output_type -> GetUserStreamResponse
	19, // 66: Dekart.GetUsage:output_type -> GetUsageResponse
	16, // 67: Dekart.CreateSource:output_type -> CreateSourceResponse
	14, // 68: Dekart.UpdateSource:output_type -> UpdateSourceResponse
	12, // 69: Dekart.ArchiveSource:output_type -> ArchiveSourceResponse
	6,  // 70: Dekart.GetSourceList:output_type -> GetSourceListResponse
	10, // 71: Dekart.TestConnection:output_type -> TestConnectionResponse
	50, // [50:72] is the sub-list for method output_type
	28, // [28:50] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_proto_dekart_proto_init() }
func file_proto_dekart_proto_init() {
	if File_proto_dekart_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_dekart_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSourceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSourceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDiscoverableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDiscoverableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveDatasetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEnvRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEnvResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedirectState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Report); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dataset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDatasetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDatasetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForkReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForkReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dekart_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEnvResponse_Variable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_dekart_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   53,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_dekart_proto_goTypes,
		DependencyIndexes: file_proto_dekart_proto_depIdxs,
		EnumInfos:         file_proto_dekart_proto_enumTypes,
		MessageInfos:      file_proto_dekart_proto_msgTypes,
	}.Build()
	File_proto_dekart_proto = out.File
	file_proto_dekart_proto_rawDesc = nil
	file_proto_dekart_proto_goTypes = nil
	file_proto_dekart_proto_depIdxs = nil
}
